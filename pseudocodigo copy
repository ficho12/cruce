Semáforos:
n0: para la biblioteca
n1: valor NumeroProcesos-2;
n2-n7: valor 1;

Memoria Compartida:
256 bytes para la biblioteca (no la usamos)

Buzón:
Se guardan dos arrays con las posiciones del cruce para coches y para peatones y se inicializan (se en envía un mensaje) a 1.

ambar(){

	if(datos.fase ==2){ 
	CRUCE_pon_semAforo(SEM_C1 ,AMARILLO);
	tres llamadas a la funcion pausa()
	}

	if(datos.fase ==3){ 
	CRUCE_pon_semAforo(SEM_C2,AMARILLO);
	tres llamadas a la funcion pausa()
	}
}

cambiarColorSem()
{
	declarar variable i y sops
	struct sembuf sops

	datos.fase = 0
	for(;;){

			if(datos.fase==1){
				W(SEM_IPC_P1)
				CRUCE_pon_semAforo(SEM_P1,ROJO)
			}

			CRUCE_pon_semAforo(SEM_P2,VERDE)
			S(SEM_IPC_P2)
			CRUCE_pon_semAforo(SEM_C1,VERDE)
			S(SEM_IPC_C1)	

			bucle for con 6 pausa()	

		datos.fase=2

		//Segunda fase duracion 9 pausas
			W(SEM_IPC_C1);
			ambar()
			CRUCE_pon_semAforo(SEM_C1,ROJO)
			W(SEM_IPC_P2)
			CRUCE_pon_semAforo(SEM_P2,ROJO);
			CRUCE_pon_semAforo(SEM_C2,VERDE);
			S(SEM_IPC_C2);

			bucle for con 9 pausa()	

		datos.fase = 3;
		//Tercera fase duracion 12 pausas
			W(SEM_IPC_C2)
			ambar()
			CRUCE_pon_semAforo(SEM_C2,ROJO)
			CRUCE_pon_semAforo(SEM_P1,VERDE)
			S(SEM_IPC_P1) 

			bucle for con 12 pausa()	
		datos.fase = 1;
	}
}

CRUCE_inicio()
CRUCE_pon_semAforo(SEM_P1,ROJO);
CRUCE_pon_semAforo(SEM_P2,ROJO);
CRUCE_pon_semAforo(SEM_C1,ROJO);
CRUCE_pon_semAforo(SEM_C2,ROJO);
W(SEM_IPC_P1);
W(SEM_IPC_C2);
W(SEM_IPC_P2);
W(SEM_IPC_C1);

creaNuevoProceso
{
	GestosSemaforico()
}

Bucle_Inf
{
	W(SemNumProc)
	if(proceso=Peaton)
	{
		creaNuevoProceso
		{
			W(ZONA_CRITICA)

			pos1=CRUCE_inicio_peatOn_ext(&pos2)

			EsperaMsg(tipo[pos2.x][pos2.y])

			posAnt=pos2;

			do
			{
				do
				{
					EsperaMsg(tipo[pos1.x][pos1.y])
					pos3=CRUCE_avanzar_peatOn(pos1)
					EnviaMsg(msgTipoLibP[posAnt.x][posAnt.y])
					posAnt=pos1

					if(llegaCruceP2){
						W(SEM_IPC_P2)
						pos1=pos3
						do{
							EsperaMsg(tipo[pos1.x][pos1.y])
							pos3=CRUCE_avanzar_peatOn(pos1);
							EnviaMsg(msgTipoLibP[posAnt.x][posAnt.y])
							posAnt=pos1;

							PausaCadaDosIteraciones()
				
							pos1=pos3;
						}while(mientrasNoAcabeElPasoCebraP2)

					S(SEM_IPC_P2)
					}
					if(llegaCruceP1){
						W(SEM_IPC_P1); 
						W(CRUCE_COCHES); 
						pos1=pos3;
						do{
							EsperaMsg(tipo[pos1.x][pos1.y])
							pos3=CRUCE_avanzar_peatOn(pos1);
							EnviaMsg(msgTipoLibP[posAnt.x][posAnt.y])
							posAnt=pos1;

							PausaCadaDosIteraciones()
				
							pos1=pos3;
						}while(mientrasNoAcabeElPasoCebraP1)
						S(SEM_IPC_P1);
						S(CRUCE_COCHES);
					}
					PausaCadaDosIteraciones()
				}while(EstarEnZonaCritica)

				if(flagCritico==0)
				{
					S(ZONA_CRITICA)
					flagCritico=1;
				}
				
			}while(LimiteTablero)

			CRUCE_fin_peatOn()
			EnviaMsg(msgTipoLibP[posAnt.x][posAnt.y])
				
			S(SemNumProc)
			
		}
	}else
	{
		creaNuevoProceso
		{
			pos1=CRUCE_inicio_coche()
			if(cocheEnZonaC2){
				do{
					if(flagCruce==0){
						EsperaMsg(tipo[pos1.x][pos1.y])
						pos3=CRUCE_avanzar_coche(pos1); 						
						if(flagLibCoche==1 && flagCruce<6){
							EnviaMsg(msgTipoLibP[posAnt.x+2][posAnt.y])
						}else{
							flagLibCoche=1
						}
						if(flagCruce>=1){
							flagCruce++
						}
						posAnt=pos1
						PausaCadaDosIteraciones()
						pos1=pos3
						if(pos3.x==13){					
							W(SEM_IPC_C2)
						}else if(pos3.x==23){	
							W(CRUCE_COCHES)
							flagCruce=1
						}else if(pos3.x==29){	
							S(SEM_IPC_C2)
						}
					}
				}while(LimiteTablero)
			}
			if(cocheEnZonaC1){
				do{
					if(flagLibCoche==0){
						EsperaMsg(tipo[pos1.x][pos1.y])
						posAnt=pos1;
					}
					pos3=CRUCE_avanzar_coche(pos1)
					if(flagLibCoche==1){    
						EnviaMsg(msgTipoLibP[posAnt.x+2][posAnt.y+6])
						flagLibCoche++
					}else{
						flagLibCoche=2
					}
					if((pos3.y==6) && (flagCoche==0)){ 
						W(SEM_IPC_C1)
						W(CRUCE_COCHES)
						flagCoche=1
					}
					if((pos3.y==13)&&(flagCoche==1)){
						flagCoche=2
						flagLibCoche=1
					}
					PausaCadaDosIteraciones()

				}while(FinalTablero)
			}
			CRUCE_fin_coche()
			S(SemNumProc)
			if(flagCoche==2)
				S(SEM_IPC_C1)		
			S(CRUCE_COCHES)
		}
	}
}
